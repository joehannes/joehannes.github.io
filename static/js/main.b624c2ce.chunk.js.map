{"version":3,"sources":["components/Nav.tsx","pages/Welcome.tsx","routes/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/Welcome.module.scss","components/Nav.module.scss"],"names":["Nav","useEffect","window","addEventListener","handleScroll","removeEventListener","activePage","e","scrollTop","pageYOffset","viewportHeight","innerHeight","Math","floor","prevPage","scrollTo","top","behavior","nextPage","total","body","document","html","documentElement","height","max","scrollHeight","offsetHeight","clientHeight","round","nrOfPages","keyHandlers","MOVE_UP","preventDefault","stopPropagation","MOVE_DOWN","keyMap","handlers","className","styles","position","Button","onClick","circular","color","icon","inverted","customElements","define","CodersRankActivity","Welcome","Segment","Group","layout","basic","avatar__container","start","end","width","source","textAlign","username","labels","legend","tooltip","branding","Dashboard","useState","hovered","setHovered","Container","fluid","Grid","divided","Row","columns","Column","onMouseEnter","onMouseLeave","href","target","rel","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b624c2ce.chunk.js","sourcesContent":["import React, { FC, useEffect } from 'react';\nimport {\n  Button,\n} from 'semantic-ui-react';\nimport { GlobalHotKeys } from 'react-hotkeys';\n\nimport styles from './Nav.module.scss';\n\nconst Nav: FC = () => {\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  })\n\n  let activePage = 0;\n  const nrOfPages = () => {\n    var body = document.body,\n        html = document.documentElement;\n\n    var height = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n\n    return Math.round(height / window.innerHeight);\n  };\n\n  const handleScroll = (e: Event) => {\n    let scrollTop = window.pageYOffset;\n    let viewportHeight = window.innerHeight;\n    activePage = Math.floor(scrollTop / viewportHeight);\n  }\n\n  const prevPage = () => {\n    if (activePage > 0) {\n      window.scrollTo({ top: window.innerHeight * (activePage - 1), behavior: 'smooth' });\n    } else if (window.pageYOffset > 0) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }\n\n  const nextPage = () => {\n    const total = nrOfPages();\n    if (activePage < (total - 1)) {\n      window.scrollTo({ top: window.innerHeight * (activePage + 1), behavior: 'smooth' });\n    }\n  }\n\n  const keyMap = {\n    MOVE_UP: \"ArrowUp\",\n    MOVE_DOWN: \"ArrowDown\",\n  };\n\n  const keyHandlers = {\n    MOVE_UP: (e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n      prevPage();\n    },\n    MOVE_DOWN: (e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n      nextPage();\n    },\n  };\n\n  return (<>\n    <GlobalHotKeys\n      keyMap={keyMap}\n      handlers={keyHandlers}\n    />\n    <nav className={styles.position}>\n        <Button onClick={prevPage} circular color=\"black\" icon=\"caret up\" />\n        <Button circular color=\"black\" icon=\"keyboard\" inverted />\n        <Button onClick={nextPage} circular color=\"black\" icon=\"caret down\" />\n    </nav>\n  </>);\n}\n\nexport default Nav;\n","import React, { FC, useState } from 'react';\nimport {\n  Container,\n  Segment,\n} from 'semantic-ui-react';\nimport VideoLooper from 'react-video-looper';\n\nimport CodersRankActivity from '@codersrank/activity';\n\nimport styles from './Welcome.module.scss';\n// import wavingVid from '../assets/vid/waving.webm';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'codersrank-activity': any;\n    }\n  }\n}\n\nwindow.customElements.define('codersrank-activity', CodersRankActivity as unknown as CustomElementConstructor);\n\nconst Welcome: FC = () => {\n  return (<>\n    <Segment.Group\n      className={styles.layout}\n    >\n      <Segment\n        basic\n        className={styles.avatar__container}\n      >\n        <VideoLooper\n          start={0}\n          end={2}\n          width=\"128px\"\n          height=\"128px\"\n          source=\"/assets/vid/waving.webm\"\n        />\n      </Segment>\n      <Segment\n        basic\n        className=\"dashboard__subtitle\"\n        textAlign=\"center\"\n      >\n        <h1>joehannes</h1>\n      </Segment>\n      <Segment\n        basic\n      >\n        <codersrank-activity\n          username=\"joehannes\"\n          labels\n          legend\n          tooltip\n          branding={false}\n        >\n        </codersrank-activity>\n      </Segment>\n      <Segment\n        basic\n        className=\"dashboard__subtitle\"\n        textAlign=\"center\"\n      >\n        <h2>Frontend Developer: React/Typescript</h2>\n      </Segment>\n    </Segment.Group>\n  </>);\n}\n\nexport default Welcome;\n","import React, { FC, useState } from 'react';\nimport {\n  Container,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\n\nimport Welcome from '../pages/Welcome';\n\nimport './Dashboard.scss';\n\nconst Dashboard: FC = () => {\n  let [hovered, setHovered] = useState(0);\n\n  return (<>\n    <Container\n      fluid\n      className=\"page__container\"\n    >\n      <Welcome />\n    </Container>\n    <Container\n      fluid\n      className=\"page__container\"\n    >\n      <Segment.Group className=\"style__border--none\">\n        <Segment basic textAlign=\"center\">\n          <h1>Motivation</h1>\n        </Segment>\n        <Segment basic>\n          <article className=\"motivation__article\">\n            <Grid divided>\n              <Grid.Row columns={4}>\n                <Grid.Column\n                  className={`newspaper__column ${hovered === 1 ? 'active' : ''} ${hovered !== 0 && hovered !== 1 ? 'inactive' : ''}`}\n                  onMouseEnter={() => setHovered(1)}\n                  onMouseLeave={() => setHovered(0)}\n                >\n                  <h4>Background</h4>\n                  <p>\n                    I ‚ù§ to code meaningful stuff.<br/>\n                    I ‚ù§ mathematics and useful visualizations, applications of algorithms and thoughtful presentations.\n                  </p><p>\n                    I got my <span className=\"text--pronounced\">degree/diploma</span>\n                    <ul>\n                      <li>in 2007</li>\n                      <li>in Media Technology <br/>[Dipl.-Ing. (FH)],</li>\n                      <li>at the University of Applied Sciences St. P&ouml;lten, Austria,</li>\n                    </ul>\n                    and started out as a Flasher.</p>\n                </Grid.Column>\n                <Grid.Column\n                  className={`newspaper__column ${hovered === 2 ? 'active' : ''} ${hovered !== 0 && hovered !== 2 ? 'inactive' : ''}`}\n                  onMouseEnter={() => setHovered(2)}\n                  onMouseLeave={() => setHovered(0)}\n                >\n                  <h4>Evolution</h4>\n                  <p>\n                      Via PHP and some DB-hacking <span className=\"text--pronounced\">I temporarily became a Full-Stacker</span> in Groovy/Grails.</p>\n                  <p>\n                    Falling in ‚ù§ with the representational (UI/UX) capabilities of Javascript I switched to the frontend full time.\n                    <span className=\"text--pronounced\">10 years</span> hence, I came quite a way, via jQuery and Bootstrap, AngularJS to <span className=\"text--pronounced\">nowadays mostly Typescript/React</span>.<p></p>\n                    I was almost all the time involved with some sidekick pet/hobby-projects, that would at the same time teach me\n                    the skills I still lacked.\n                    As of 2021 I'm currently into my own `tailwindcss`-like UI/UX project called <a href=\"https://github.com/prudencss\" target=\"_blank\" rel=\"noreferrer\">`prudencss`</a>.\n                  </p>\n                </Grid.Column>\n                <Grid.Column\n                  className={`newspaper__column ${hovered === 3 ? 'active' : ''} ${hovered !== 0 && hovered !== 3 ? 'inactive' : ''}`}\n                  onMouseEnter={() =>setHovered(3)}\n                  onMouseLeave={() =>setHovered(0)}\n                ><h4>Relevant Experience</h4>\n                  <p>\n                I got about <span className=\"text--pronounced\">3 years of experience in React and a bit more in Typescript</span>.\n                              Also, while I generally speaking might boast of <span className=\"text--pronounced\">considerable international experience</span> - having worked in teams in London, Amsterdam, Berlin and Vienna - I already added about <span className=\"text--pronounced\">3 years of fully remote experience</span> to my portfolio.</p><p>Most of my remote experience I have been working from a Caribbean retreat, which is where I feel quite comfortable. I can manage <span className=\"text--pronounced\">100% office hour overlap with the Americas</span> and <span className=\"text--pronounced\">5 hours with CET</span> - in a sustainable manner.\n                  </p>\n                </Grid.Column>\n                <Grid.Column\n                  className={`newspaper__column ${hovered === 4 ? 'active' : ''} ${hovered !== 0 && hovered !== 4 ? 'inactive' : ''}`}\n                  onMouseEnter={() => setHovered(4)}\n                  onMouseLeave={() => setHovered(0)}\n                >\n                  <h4>Attitude &amp; Mindset</h4>\n                  <p>\n                    I've learnt to know the important bits and pieces about remote work. I understand that a <span className=\"text--pronounced\">pro-active/self-starter </span>\n                    attitude is favorable. I found communication is of great importance and am careful to always try and convey meaning in a clear and concise way. As of timeframes and deadlines: I got different approaches for different situations, adapting myself to the company culture. Generally speaking, I always try to deliver and with <span className=\"text--pronounced\">a reasonable mix of tech, quality, and speed</span>.\n                  </p><p>\n                    I'm usually open to all kinds of propositions and discussions, <a href=\"mailto:johannes.neugschwentner@gmail.com\">drop me a line</a>.\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </article>\n        </Segment>\n        <Segment basic>\n        </Segment>\n      </Segment.Group>\n    </Container>\n  </>);\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport {\n  Container,\n} from 'semantic-ui-react';\n\nimport Nav from './components/Nav';\nimport Dashboard from './routes/Dashboard';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav/>\n      <Switch>\n        <Route path=\"/\">\n          <Container\n            className=\"page__container--position page__container--color\"\n            fluid\n          >\n            <Dashboard/>\n          </Container>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar__container\":\"Welcome_avatar__container__3RCFj\",\"layout\":\"Welcome_layout__Li1jt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Nav_position__1DFji\"};"],"sourceRoot":""}