[{"/home/joehannes/Code/joehannes/joehannes-portfolio/src/index.tsx":"1","/home/joehannes/Code/joehannes/joehannes-portfolio/src/App.tsx":"2","/home/joehannes/Code/joehannes/joehannes-portfolio/src/reportWebVitals.ts":"3","/home/joehannes/Code/joehannes/joehannes-portfolio/src/components/Nav.tsx":"4","/home/joehannes/Code/joehannes/joehannes-portfolio/src/pages/Welcome.tsx":"5","/home/joehannes/Code/joehannes/joehannes-portfolio/src/routes/Dashboard.tsx":"6","/home/joehannes/Code/joehannes/joehannes-portfolio/src/pages/Motivation.tsx":"7","/home/joehannes/Code/joehannes/joehannes-portfolio/src/pages/WorkExperience.tsx":"8"},{"size":501,"mtime":1610841547028,"results":"9","hashOfConfig":"10"},{"size":604,"mtime":1611050687313,"results":"11","hashOfConfig":"10"},{"size":425,"mtime":1610830339853,"results":"12","hashOfConfig":"10"},{"size":2039,"mtime":1610989101087,"results":"13","hashOfConfig":"10"},{"size":1486,"mtime":1611042791850,"results":"14","hashOfConfig":"10"},{"size":623,"mtime":1611050687343,"results":"15","hashOfConfig":"10"},{"size":5429,"mtime":1611061903139,"results":"16","hashOfConfig":"10"},{"size":2823,"mtime":1611050502157,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"13soovc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/joehannes/Code/joehannes/joehannes-portfolio/src/index.tsx",[],["37","38"],"/home/joehannes/Code/joehannes/joehannes-portfolio/src/App.tsx",[],"/home/joehannes/Code/joehannes/joehannes-portfolio/src/reportWebVitals.ts",[],["39","40"],"/home/joehannes/Code/joehannes/joehannes-portfolio/src/components/Nav.tsx",[],"/home/joehannes/Code/joehannes/joehannes-portfolio/src/pages/Welcome.tsx",[],"/home/joehannes/Code/joehannes/joehannes-portfolio/src/routes/Dashboard.tsx",[],"/home/joehannes/Code/joehannes/joehannes-portfolio/src/pages/Motivation.tsx",["41"],"import React, { FC, useState } from 'react';\nimport {\n  Container,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\n\nimport styles from './Motivation.module.scss';\n\nconst Motivation: FC = () => {\n  let [hovered, setHovered] = useState(0);\n\n  return (<>\n    <Segment.Group className=\"style__border--none\">\n      <Segment basic textAlign=\"center\" className=\"dashboard__subtitle\">\n        <h1>Motivation</h1>\n      </Segment>\n      <Segment basic>\n        <article className={styles.motivation__article}>\n          <Grid divided>\n            <Grid.Row columns={4}>\n              <Grid.Column\n                className={`${styles.newspaper__column} dashboard__subtitle ${hovered === 1 ? styles.active : ''} ${hovered !== 0 && hovered !== 1 ? styles.inactive : ''}`}\n                onMouseEnter={() => setHovered(1)}\n                onMouseLeave={() => setHovered(0)}\n              >\n                <h4>Background</h4>\n                <p>\n                  I ❤ to code meaningful stuff.<br/>\n                  I ❤ mathematics and useful visualizations, applications of algorithms and thoughtful presentations.\n                </p><p>\n                  I got my <span className=\"text--pronounced\">degree/diploma</span>\n                  <ul>\n                    <li>in 2007</li>\n                    <li>in Media Technology <br/>[Dipl.-Ing. (FH)],</li>\n                    <li>at the University of Applied Sciences St. P&ouml;lten, Austria,</li>\n                  </ul>\n                  and started out as a Flasher.</p>\n              </Grid.Column>\n              <Grid.Column\n                className={`${styles.newspaper__column} dashboard__subtitle ${hovered === 2 ? styles.active : ''} ${hovered !== 0 && hovered !== 2 ? styles.inactive : ''}`}\n                onMouseEnter={() => setHovered(2)}\n                onMouseLeave={() => setHovered(0)}\n              >\n                <h4>Evolution</h4>\n                <p>\n                    Via PHP and some DB-hacking <span className=\"text--pronounced\">I temporarily became a Full-Stacker</span> in Groovy/Grails.</p>\n                <p>\n                  Falling in ❤ with the representational (UI/UX) capabilities of Javascript I switched to the frontend full time.\n                  <span className=\"text--pronounced\">10 years</span> hence, I came quite a way, via jQuery and Bootstrap, AngularJS to <span className=\"text--pronounced\">nowadays mostly Typescript/React</span>.<p></p>\n                  I was almost all the time involved with some sidekick pet/hobby-projects, that would at the same time teach me\n                  the skills I still lacked.\n                  As of 2021 I'm currently into my own `tailwindcss`-like UI/UX project called <a href=\"https://github.com/prudencss\" target=\"_blank\" rel=\"noreferrer\">`prudencss`</a>.\n                </p>\n              </Grid.Column>\n              <Grid.Column\n                className={`${styles.newspaper__column} dashboard__subtitle ${hovered === 3 ? styles.active : ''} ${hovered !== 0 && hovered !== 3 ? styles.inactive : ''}`}\n                onMouseEnter={() =>setHovered(3)}\n                onMouseLeave={() =>setHovered(0)}\n              ><h4>Relevant Experience</h4>\n                <p>\n              I got about <span className=\"text--pronounced\">3 years of experience in React and a bit more in Typescript</span>.\n                            Also, while I generally speaking might boast of <span className=\"text--pronounced\">considerable international experience</span> - having worked in teams in London, Amsterdam, Berlin and Vienna - I already added about <span className=\"text--pronounced\">3 years of fully remote experience</span> to my portfolio.</p><p>Most of my remote experience I have been working from a Caribbean retreat, which is where I feel quite comfortable. I can manage <span className=\"text--pronounced\">100% office hour overlap with the Americas</span> and <span className=\"text--pronounced\">5 hours with CET</span> - in a sustainable manner.\n                </p>\n              </Grid.Column>\n              <Grid.Column\n                className={`${styles.newspaper__column} dashboard__subtitle ${hovered === 4 ? styles.active : ''} ${hovered !== 0 && hovered !== 4 ? styles.inactive : ''}`}\n                onMouseEnter={() => setHovered(4)}\n                onMouseLeave={() => setHovered(0)}\n              >\n                <h4>Attitude &amp; Mindset</h4>\n                <p>\n                  I've learnt to know the important bits and pieces about remote work. I understand that a <span className=\"text--pronounced\">pro-active/self-starter </span>\n                  attitude is favorable. I found communication is of great importance and am careful to always try and convey meaning in a clear and concise way. As of timeframes and deadlines: I got different approaches for different situations, adapting myself to the company culture. Generally speaking, I always try to deliver and with <span className=\"text--pronounced\">a reasonable mix of tech, quality, and speed</span>.\n                </p><p>\n                  I'm usually open to all kinds of propositions and discussions, <a href=\"mailto:johannes.neugschwentner@gmail.com\">drop me a line</a>.\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </article>\n      </Segment>\n      <Segment basic>\n      </Segment>\n    </Segment.Group>\n  </>);\n}\n\nexport default Motivation;\n","/home/joehannes/Code/joehannes/joehannes-portfolio/src/pages/WorkExperience.tsx",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":3,"nodeType":"51","messageId":"52","endLine":3,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":1,"column":21,"nodeType":"51","messageId":"52","endLine":1,"endColumn":29},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]